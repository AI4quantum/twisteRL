name: Build and publish Python wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # Used for the x86_64 builds.
          - macos-13
          # Used for the ARM builds.
          - macos-14
          - windows-latest
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.os == 'macos-14' && 'arm64' || 'x64' }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine
          pip install .
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -i python${{ matrix.python-version }}
          manylinux: auto
      - name: Release wheels
        shell: bash
        run: |
          ls -l rust/target/wheels/
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            rm rust/target/wheels/*-linux_*
          fi
          ls -l rust/target/wheels/
          twine upload -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} rust/target/wheels/*

publish-crate:
    name: Publish crate to crates.io
    runs-on: ubuntu-latest
    needs: publish-python
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Publish crate
        run: cargo publish --manifest-path rust/Cargo.toml --token ${{ secrets.CARGO_REGISTRY_TOKEN }}